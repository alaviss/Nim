# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- devel

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    sudo apt-get update -qq
    sudo apt-get install -yq libcurl4-openssl-dev libsdl1.2-dev \
      libgc-dev libsfml-dev
  displayName: 'Install test deps'
- checkout: self
  fetchDepth: 1
- script: |
    curl -u :$AZURE_PAT -F testCaseTitle="Test 1" -F outcome="Passed" -F errorMessage="" $AZURE_ORG_URI/$AZURE_PROJ/_apis/test/Runs/$AZURE_BUILD_ID/results?api_version=5.0
    curl -u :$AZURE_PAT -F testCaseTitle="Test 3" -F outcome="Failed" -F errorMessage="test msg" $AZURE_ORG_URI/$AZURE_PROJ/_apis/test/Runs/$AZURE_BUILD_ID/results?api_version=5.0
  env:
    AZURE_PAT: $(System.AccessToken)
    AZURE_ORG_URI: $(System.TeamFoundationCollectionUri)
    AZURE_PROJ: $(System.TeamProject)
    AZURE_BUILD_ID: $(System.DefinitionId)
- script: git clone --depth 1 https://github.com/nim-lang/csources
  displayName: 'Checkout csources'
- script: make -C csources -j 2 LD=gcc
  displayName: 'Build csources'
- script: bin/nim c koch
  displayName: 'Build koch'
- bash: |
    export PATH="$PWD/bin${PATH:+:${PATH}}"
    ./koch runCI
  displayName: 'Run CI'
